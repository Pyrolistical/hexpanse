:root {
	/* solarized theme https://ethanschoonover.com/solarized/ */
	--base03: #002b36;
	--base02: #073642;
	--base01: #586e75;
	--base00: #657b83;
	--base0: #839496;
	--base1: #93a1a1;
	--base2: #eee8d5;
	--base3: #fdf6e3;
	--yellow: #b58900;
	--orange: #cb4b16;
	--red: #dc322f;
	--magenta: #d33682;
	--violet: #6c71c4;
	--blue: #268bd2;
	--cyan: #2aa198;
	--green: #859900;

	--dark-background: var(--base03);
	--dark-foreground: var(--base0);
	--dark-cell-background: var(--base02);
	--dark-cell-foreground: var(--base0);

	--light-cell-backround: var(--base3);
	--light-cell-foreground: var(--base00);

	--background: var(--dark-background);
	--foreground: var(--dark-foreground);
	--cell-background: var(--dark-cell-background);
	--cell-foreground: var(--dark-cell-foreground);
	--rotatation-speed: 250ms;
	color-scheme: dark;
}

html,
body {
	background-color: var(--background);
	color: var(--foreground);
}

h1,
h2,
p {
	text-align: center;
}
a {
	color: var(--foreground);
	text-decoration: none;
}

#new-game-form {
	accent-color: var(--foreground);
	display: flex;
	flex-direction: row;
	justify-content: center;
	align-items: baseline;
	gap: 8px;
	flex-wrap: wrap;
}

#new-game-form button {
	background-color: var(--cell-background);
	color: var(--cell-foreground);
	border: 2px solid var(--base01);
	border-radius: 4px;
}
#new-game-form button:hover {
	background-color: var(--base01);
	cursor: pointer;
}

#new-game-form fieldset {
	display: inline-flex;
	flex-direction: row;
	gap: 16px;
	margin: 0;
	border: 2px solid var(--base01);
	border-radius: 4px;
	flex-wrap: wrap;
}

svg {
	touch-action: manipulation;
}

svg text {
	-webkit-user-select: none;
	user-select: none;
}

.cell {
	fill: var(--cell-background);
}

.cell > path {
	transform: scale(0.855);
}

.cell[data-color="red"] path.end {
	fill: var(--red);
}
.cell[data-color="green"] path.end {
	fill: var(--green);
}
.cell[data-color="blue"] path.end {
	fill: var(--blue);
}

.cell path.end {
	fill: var(--cell-foreground);
}

.cell[data-color="red"] line {
	stroke: var(--red);
}
.cell[data-color="green"] line {
	stroke: var(--green);
}
.cell[data-color="blue"] line {
	stroke: var(--blue);
}

.cell line {
	stroke: var(--cell-foreground);
	stroke-width: 0.25;
	stroke-linecap: round;
}

svg.game-over .cell line {
	animation-name: pulseGameOverStroke;
	animation-duration: 2s;
	animation-iteration-count: infinite;
	animation-direction: alternate;
	animation-timing-function: linear;
}
svg.game-over .cell path.end {
	animation-name: pulseGameOverFill;
	animation-duration: 2s;
	animation-iteration-count: infinite;
	animation-direction: alternate;
	animation-timing-function: linear;
}

@keyframes pulseGameOverStroke {
	from {
		stroke: white;
	}

	to {
		stroke: gold;
	}
}

@keyframes pulseGameOverFill {
	from {
		fill: white;
	}

	to {
		fill: gold;
	}
}

main {
	width: 100%;
	max-height: 100vh;
	display: flex;
	flex-direction: row;
	justify-content: center;
}

main svg {
	width: 100%;
}

@keyframes rotateTo0 {
	from {
		transform: rotate(-60deg);
	}

	to {
		transform: rotate(0);
	}
}
.rotate0 {
	transform: rotate(0);
}
.rotateTo0 {
	animation-name: rotateTo0;
	animation-duration: var(--rotatation-speed);
}

@keyframes rotateTo60 {
	from {
		transform: rotate(0);
	}

	to {
		transform: rotate(60deg);
	}
}
.rotate60 {
	transform: rotate(60deg);
}
.rotateTo60 {
	animation-name: rotateTo60;
	animation-duration: var(--rotatation-speed);
}

@keyframes rotateTo120 {
	from {
		transform: rotate(60deg);
	}

	to {
		transform: rotate(120deg);
	}
}
.rotate120 {
	transform: rotate(120deg);
}
.rotateTo120 {
	animation-name: rotateTo120;
	animation-duration: var(--rotatation-speed);
}

@keyframes rotateTo180 {
	from {
		transform: rotate(120deg);
	}

	to {
		transform: rotate(180deg);
	}
}
.rotate180 {
	transform: rotate(180deg);
}
.rotateTo180 {
	animation-name: rotateTo180;
	animation-duration: var(--rotatation-speed);
}

@keyframes rotateTo240 {
	from {
		transform: rotate(180deg);
	}

	to {
		transform: rotate(240deg);
	}
}
.rotate240 {
	transform: rotate(240deg);
}
.rotateTo240 {
	animation-name: rotateTo240;
	animation-duration: var(--rotatation-speed);
}

@keyframes rotateTo300 {
	from {
		transform: rotate(240deg);
	}

	to {
		transform: rotate(300deg);
	}
}
.rotate300 {
	transform: rotate(300deg);
}
.rotateTo300 {
	animation-name: rotateTo300;
	animation-duration: var(--rotatation-speed);
}
